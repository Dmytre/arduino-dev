/*************************************************** 
  Эта библиотека разработана специально для модуля светодиодной матрицы 8x8 ROC

  ----> https://shop.robotclass.ru/index.php?route=product/product&product_id=733

  Данный модуль работает по интерфейсу I2C, используя два контакта SDA и SCL.
  Имеется возможность использовать разные адреса I2C. Для этого нужно разрезать
  или спаять специальные адресные перемычки на обратной стороне платы.
  Для модулей с двумя адресными пермычками можно выбрать один адрес из четырёх: 
  0x70, 0x71, 0x72 or 0x73. Для модулей с тремя адресными перемычками допустимы
  адреса с 0x70 по 0x77.

  RobotClass вкладывает много сил в создание уроков по основам электроники
  и программированию микроконтроллеров. Покупая наши продукты, вы помогаете
  нам создавать новые уроки и модули! 

  Автор: Олег Евсегнеев, RobotClass.  
  BSD license, all text above must be included in any redistribution
 ****************************************************/
 
#include <Wire.h>
#include <Adafruit_GFX.h>
#include "Adafruit_LEDBackpack.h"

Adafruit_8x8matrix matrix = Adafruit_8x8matrix();

// объявляем двумерный массив с картинками
static const uint8_t PROGMEM frames[2][8] = {
  { B00000000,
    B01100110,
    B11111111,
    B11111111,
    B01111110,
    B00111100,
    B00011000,
    B00000000 },
  { B00000000, 
    B00100100, 
    B01111110, 
    B01111110, 
    B00111100, 
    B00011000, 
    B00000000, 
    B00000000 }
};

void setup() {
  matrix.begin(0x70); // устанавливаем адрес модуля
}

void loop() {
  matrix.clear(); // очищаем буфер матрицы
  // заполняем буфер матрицы первой картинкой
  matrix.drawBitmap(0, 0, frames[0], 8, 8, 1);
  matrix.writeDisplay(); // выводим буфер в матрицу
  delay(200); // пауза 200 мс
  matrix.clear(); // очищаем буфер матрицы
  // заполняем буфер матрицы второй картинкой
  matrix.drawBitmap(0, 0, frames[1], 8, 8, 1);
  matrix.writeDisplay(); // выводим буфер в матрицу
  delay(500); // пауза 200 мс
}
